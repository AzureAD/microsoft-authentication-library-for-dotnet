# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# This pipeline will be extended to the OneESPT template
trigger: none
name: $(Date:yyyyMMdd).$(Rev:r)
resources:
  pipelines:
    - pipeline: '_MSALNET-OneBranch-Release-Official'
      project: 'IDDP'
      source: 'MSAL.NET-OneBranch-Release-Official'
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release
variables:
    ReleaseNuget: $(Release.Nuget)
    ReleaseIDDP: $(Release.IDDP)
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: MSSecurity-1ES-Build-Agents-Pool
      image: MSSecurity-1ES-Windows-2022
      os: windows
    customBuildTags:
      - ES365AIMigrationTooling-BulkMigrated-Release
    stages:
      - stage: Release_Nuget
        displayName: Upload to Nuget
        # condition: eq('${{ variables.ReleaseNuget }}', true) # Only run this stage if set to true at runtime
        # dependsOn: build # Only run if the 'build' stage completes
        jobs:
          - job: Require_Approval
            displayName: Pre-Deployment Approval
            condition: succeeded()
            timeoutInMinutes: 60
            pool: server
            steps:
              - task: ManualValidation@1
                inputs:
                  notifyUsers: |-
                    avdunn@microsoft.com
          - job: Release
            displayName: Release Steps
            condition: succeeded() # Only run this job if the previous job succeeded, in this case manual approval
            timeoutInMinutes: 0
            templateContext:
              inputs:
                - input: pipelineArtifact
                  pipeline: '_MSALNET-OneBranch-Release-Official'
                  artifactName: 'drop_build_main'
                  targetPath: '$(Build.ArtifactStagingDirectory)/drop_build_main'
            steps:
              - script: echo $(Release.Nuget) $(Release.IDDP) 
                displayName: Say hello
              - task: NuGetToolInstaller@1
                displayName: Use NuGet >=5.x
                inputs:
                  versionSpec: '>=5.x'
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.*.nupkg
              #     nuGetFeedType: external
              #     feedPublish: NuGetMsal_NET2
              #     externalEndpoint: NuGetMsal_NET2
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL.Desktop'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Desktop.*.nupkg
              #     nuGetFeedType: external
              #     externalEndpoint: NuGetMsal_NET2
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL.Broker'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Broker.*.nupkg
              #     nuGetFeedType: external
              #     externalEndpoint: NuGetMsal_NET2
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL Extension'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Extensions.Msal.*.nupkg
              #     nuGetFeedType: external
              #     feedPublish: NuGetMsal_NET2
              #     externalEndpoint: NuGetMsal_NET2
      - stage: Release_IDDP
        displayName: Upload to IDDP (VSTS)
        condition: eq(variables.ReleaseIDDP, true) # Only run this stage if set to true at runtime
        #dependsOn: build # Only run if the 'build' stage completes
        jobs:
          - job: PreDeploymentApprovalJob
            displayName: Pre-Deployment Approval
            condition: succeeded() # Only run this job if the previous job succeeded
            timeoutInMinutes: 0
            pool: server
            steps:
              - task: ManualValidation@1
                inputs:
                  notifyUsers: |-
                    $(approver)
          - job: Job_1
            displayName: Agent job
            condition: succeeded()
            timeoutInMinutes: 0
            templateContext:
              inputs:
                - input: pipelineArtifact
                  pipeline: '_MSALNET-OneBranch-Release-Official'
                  artifactName: 'drop_build_main'
                  targetPath: '$(Build.ArtifactStagingDirectory)/drop_build_main'
                - input: pipelineArtifact
                  pipeline: '_MSALNET-OneBranch-Release-Official'
                  artifactName: 'drop_build_main_signingLogs1'
                  targetPath: '$(Build.ArtifactStagingDirectory)/drop_build_main'
            steps:
              - task: NuGetToolInstaller@1
                displayName: Use NuGet >=5.x
                inputs:
                  versionSpec: '>=5.x'
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.*.nupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL.Client Symbol'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.*.snupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL Desktop'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Desktop.*.nupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL Desktop Symbol'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Desktop.*.snupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL Desktop Broker'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Broker.*.nupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL Desktop Broker Symbol'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Broker.*.snupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL Extension'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Extensions.Msal.*.nupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d
              # - task: 1ES.PublishNuGet@1
              #   displayName: 'NuGet Push MSAL Extension Symbol'
              #   inputs:
              #     packageParentPath: '$(Build.ArtifactStagingDirectory)'
              #     packagesToPush: $(Build.ArtifactStagingDirectory)\drop_build_main\packages\Microsoft.Identity.Client.Extensions.Msal.*.snupkg
              #     feedPublish: 46419298-b96c-437f-bd4c-12c8df7f868d