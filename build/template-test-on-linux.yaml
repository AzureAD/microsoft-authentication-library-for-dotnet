# template-test-on-linux.yaml
# Run all unit tests across the LibsAndSamples.sln project on Linux platform

parameters:
  BuildConfiguration: 'Release'

steps:

- template: template-install-keyvault-secrets.yaml


# - template: template-linux-setup.yaml

# - task: Bash@3
#   displayName: Start Xvfb server and launch GUI
#   inputs:
#     targetType: inline
#     script: |
#       if [ -f '/usr/bin/apt' ]; then
#           sudo chmod 777 /etc/systemd/system/
#           sudo rm -f /etc/systemd/system/xvfb.service
#           sudo touch /etc/systemd/system/xvfb.service
#           sudo chmod 777 /etc/systemd/system/xvfb.service
#           echo '[unit]' | sudo tee -a /etc/systemd/system/xvfb.service
#           echo 'Description=X Virtual Frame Buffer Service' | sudo tee -a /etc/systemd/system/xvfb.service
#           echo 'After=network.target' | sudo tee -a /etc/systemd/system/xvfb.service
#           echo '[Service]' | sudo tee -a /etc/systemd/system/xvfb.service
#           echo 'ExecStart=/usr/bin/Xvfb :1 -screen 0 1024x768x24' | sudo tee -a /etc/systemd/system/xvfb.service
#           echo 'Restart=always' | sudo tee -a /etc/systemd/system/xvfb.service
#           echo '[Install]' | sudo tee -a /etc/systemd/system/xvfb.service
#           echo 'WantedBy=multi-user.target' | sudo tee -a /etc/systemd/system/xvfb.service

#           sudo systemctl enable /etc/systemd/system/xvfb.service
#           sudo service xvfb start

#           wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
#           sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
#           sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
#           rm -f packages.microsoft.gpg
#           sudo apt update
#           sudo apt install code
#           export DISPLAY=:1
#       elif [ -f '/usr/bin/yum' ]; then
#           # install packages for GUI test
#           sudo yum -y install xorg-x11-server-Xvfb mesa-libEGL-devel glx-utils mesa-dri-drivers xorg-x11-server-utils
#           Xvfb -ac ${DISPLAY} 2>/dev/null &
#           sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
#           sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
#           dnf check-update
#           sudo dnf -y install code
#       fi

#       code .
#       dbus-update-activation-environment --systemd DISPLAY XAUTHORITY
#       xhost +SI:localuser:$(whoami)
#       xhost +SI:localuser:microsoft-identity-broker
#   env:
#     DBUS_SESSION_BUS_ADDRESS: $(SetDbusSession.dbusSessionAddress)

- task: UseDotNet@2
  displayName: 'Use the latest .NET 8'
  inputs:
    version: 8.x

- task: CmdLine@2
  displayName: 'Clear local NuGet cache'
  inputs:
    script: 'nuget locals all -clear'

- task: DotNetCoreCLI@2
  displayName: 'dotnet workload restore'
  inputs:
    command: 'custom'
    custom: 'workload'
    arguments: 'restore .\src\client\Microsoft.Identity.Client\Microsoft.Identity.Client.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Build Integration Test'
#   inputs:
#     command: 'build'
#     projects: |
#       ./tests/Microsoft.Identity.Test.Integration.netcore/Microsoft.Identity.Test.Integration.NetCore.csproj
#     configuration: ${{ parameters.BuildConfiguration }}

- task: DotNetCoreCLI@2
  displayName: 'Build Integration Test'
  inputs:
    command: 'build'
    projects: |
      ./LibsAndSamples.sln
    configuration: ${{ parameters.BuildConfiguration }}

- script: |
    ls '$(System.DefaultWorkingDirectory)'
    dotnet test **/Microsoft.Identity.Test.Integration.netcore/Microsoft.Identity.Test.Integration.NetCore.csproj --filter FullyQualifiedName~Microsoft.Identity.Test.Integration.Broker.RuntimeBrokerTests -l "console;verbosity=detailed"
  displayName: 'Run Integration tests .NET'
  env:
    CERTIFICATE_LOCATION: $(generateLabCert.certDir)
    CERTIFICATE_PASSWORD: $(generateLabCert.certPass)