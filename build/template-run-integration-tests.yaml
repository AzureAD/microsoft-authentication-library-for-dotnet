# template-run-integration-tests.yaml
# Run all integration tests across the LibsAndSamples.sln project

steps:

- task: VSTest@2
  displayName: 'Run integration tests (.NET FX)'
  condition: and(succeeded(), eq(variables['PipelineType'], 'legacy'))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\Microsoft.Identity.Test.Integration.netfx\bin\**\Microsoft.Identity.Test.Integration.NetFx.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    rerunFailedTests: true
    rerunMaxAttempts: '3'
    runInParallel: false
    codeCoverageEnabled: true
    failOnMinTestsNotRun: true
    minimumExpectedTests: '1'
    pathtoCustomTestAdapters: 'C:\temp' # Workaround for test failure, as NUnit Test Adapter that gets detected seems to mess something up

- task: VSTest@2
  displayName: 'Run integration tests (.NET FX) On OneBranch'
  condition: and(succeeded(), eq(variables['PipelineType'], 'OneBranch'))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\Microsoft.Identity.Test.Integration.netfx\bin\**\Microsoft.Identity.Test.Integration.NetFx.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    rerunFailedTests: true
    rerunMaxAttempts: '3'
    runInParallel: false
    codeCoverageEnabled: true
    failOnMinTestsNotRun: true
    minimumExpectedTests: '1'

- task: VSTest@2
  displayName: 'Run integration tests (.NET Core)'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\Microsoft.Identity.Test.Integration.netcore\bin\**\Microsoft.Identity.Test.Integration.NetCore.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    rerunFailedTests: true
    rerunMaxAttempts: '3'
    runInParallel: false
    codeCoverageEnabled: true
    failOnMinTestsNotRun: true
    minimumExpectedTests: '1'
