# template-OneBranch-CI-libsandsamples.yaml
# Performs Nuget Restore and Build of LibsAndSamples.sln based on BuildPlatform and BuildConfiguration

parameters:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'release'
  MsalClientSemVer: '4.60.0-devopsbuild' 
  MsalSourceDir: 'microsoft-authentication-library-for-dotnet\' #Default MSAL Location

steps:

# Unit tests require .NET 3.x
- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 3.x'
  inputs:
    version: 3.x
    
# Use the latest .NET SDK
- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 8.x'
  inputs:
    version: 8.x

# Compute the source directory based on the parameter MsalSourceDir
- task: PowerShell@2
  displayName: 'Compute Source Directory'
  inputs:
    targetType: 'inline'
    script: |
      # Compute base directory
      $MsalBaseDir = "$(Build.SourcesDirectory)/$(MsalSourceDir)"
      
      # Check if both projects exist under MsalSourceDir
      $BrokerExists = Test-Path "$MsalBaseDir/src/client/Microsoft.Identity.Client.Broker"
      $ClientExists = Test-Path "$MsalBaseDir/src/client/Microsoft.Identity.Client"
      
      # Check if both projects exist directly under Build.SourcesDirectory
      $AltBrokerExists = Test-Path "$(Build.SourcesDirectory)/src/client/Microsoft.Identity.Client.Broker"
      $AltClientExists = Test-Path "$(Build.SourcesDirectory)/src/client/Microsoft.Identity.Client"

      if ($BrokerExists -and $ClientExists) {
          Write-Host "##vso[task.setvariable variable=SourceDir]$MsalBaseDir"
      } elseif ($AltBrokerExists -and $AltClientExists) {
          Write-Host "##vso[task.setvariable variable=SourceDir]$(Build.SourcesDirectory)/"
      } else {
          Write-Error "Unable to determine the correct source directory structure."
          exit 1
      }

- task: DotNetCoreCLI@2
  displayName: 'Restore required workloads for projects'
  inputs:
    command: 'custom'
    custom: 'workload'
    arguments: >
      restore $(SourceDir)src/client/Microsoft.Identity.Client/Microsoft.Identity.Client.csproj
      restore $(SourceDir)src/client/Microsoft.Identity.Client.Broker/Microsoft.Identity.Client.Broker.csproj
      --configfile $(SourceDir)NuGet.config

- task: PowerShell@2
  displayName: Install MAUI
  inputs:
    targetType: 'inline'
    script: |
      dotnet workload install maui --source "https://pkgs.dev.azure.com/IdentityDivision/_packaging/IDDP_PublicPackages/nuget/v3/index.json"
      dotnet workload install android --source "https://pkgs.dev.azure.com/IdentityDivision/_packaging/IDDP_PublicPackages/nuget/v3/index.json"

- task: CmdLine@2
  displayName: 'Clear local NuGet cache'
  inputs:
    script: 'nuget locals all -clear'

- task: VSBuild@1
  displayName: 'NuGet restore ${{ parameters.Solution }}'
  inputs:
    solution: ${{ parameters.Solution }}
    msbuildArgs: '/t:restore'
    platform: ${{ parameters.BuildPlatform }}
    configuration: ${{ parameters.BuildConfiguration }}

- task: VSBuild@1
  displayName: 'Build solution ${{ parameters.Solution }}'
  inputs:
    solution: ${{ parameters.Solution }}
    msbuildArgs: '/p:RunCodeAnalysis=false /p:MsalClientSemVer=${{ parameters.MsalClientSemVer }} /p:SourceLinkCreate=true /p:ContinousIntegrationBuild=true'
    platform: ${{ parameters.BuildPlatform }}
    configuration: ${{ parameters.BuildConfiguration }}
