# template-OneBranch-CI-libsandsamples.yaml
# Performs Nuget Restore and Build of LibsAndSamples.sln based on BuildPlatform and BuildConfiguration

parameters:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'release'
  MsalClientSemVer: '4.0.0-devopsbuild'
  MsalSourceDir: 'microsoft-authentication-library-for-dotnet\' #Default MSAL Location

steps:

- task: JavaToolInstaller@0
  displayName: Install Java 11
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: AzureStorage
    azureResourceManagerEndpoint: AuthSdkResourceManager #use managed identity to connect to the storage
    azureStorageAccountName: msalbuilds #storage in the lab
    azureContainerName: javasdk #container where the jdk is stored
    azureCommonVirtualFile: 'jdk-11.0.21_windows-x64_bin.zip' #jdk file
    jdkDestinationDirectory: '$(agent.toolsDirectory)/jdk11'
    cleanDestinationDirectory: false

- task: PowerShell@2
  displayName: Install Windows 10 SDK (version 17763)
  inputs:
    targetType: 'inline'
    script: |
      choco install windows-sdk-10-version-1809-all -y

- task: CmdLine@2
  displayName: 'Clear local NuGet cache'
  inputs:
    script: 'nuget locals all -clear'

- powershell: 'powershell.exe -File "$(MsalSourceDir)build\InstallAndroid.ps1" -ExecutionPolicy Bypass'
  displayName: 'Install Android'

- task: VSBuild@1
  displayName: 'NuGet restore ${{ parameters.Solution }}'
  inputs:
    solution: ${{ parameters.Solution }}
    msbuildArgs: '/t:restore'
    platform: ${{ parameters.BuildPlatform }}
    configuration: ${{ parameters.BuildConfiguration }}

- task: VSBuild@1
  displayName: 'Build solution ${{ parameters.Solution }}'
  inputs:
    solution: ${{ parameters.Solution }}
    msbuildArgs: '/p:RunCodeAnalysis=false /p:MsalClientSemVer=${{ parameters.MsalClientSemVer }} /p:SourceLinkCreate=true /p:ContinousIntegrationBuild=true'
    platform: ${{ parameters.BuildPlatform }}
    configuration: ${{ parameters.BuildConfiguration }}